/* 53. Construir una tabla derivada compuesta por los nombres de empresa, de clientes y de proveedores con sus respectivas direcciones, distritos y descripción de provincia. */
/* Ordenarlo para que primero salgan los clientes y luego los proveedores, ordenados por empresa. */
SELECT PROVEEDOR, EMPRESA, APELLIDOS, NOMBRE
FROM PROVEEDORES
UNION ALL
SELECT CLIENTE, EMPRESA, APELLIDOS, NOMBRE
FROM CLIENTES
/* order by al poner proveedor saca al poner cliente falla y las dos a la vez tambien falla */
ORDER BY 2
/

/* 54. Obtener por cada descripción de provincia el nº de clientes y de proveedores que contiene. */
/* Ordenar para que salgan primero el nº de proveedores descendentemente y luego los clientes de la misma forma. */

SELECT DESCRIPCION
FROM PROVINCIAS, PROVEEDORES
WHERE PROVINCIAS.PROVINCIA = PROVEEDORES.PROVINCIA(+)
GROUP BY PROVINCIA.PROVINCIA, PROVINCIAS.DESCRIPCION
UNION
SELECT PROVINCIAS.PROVINCIA, COUNT(CLIENTE), 'CLIENTES'
FROM PROVINCIAS, CLIENTES
WHERE PROVINCIAS.PROVINCIA = CLIENTES.PROVINCIA(+)
GROUP BY PROVINCIAS.PROVINCIA, PROVINCIAS.DESCRIPCION
ORDER BY 4 DESC, 3 DESC
/ 

/* 55. Obtener la tabla derivada que obtenga los nombres de las provincias que tengan más de 5 clientes y las que tengan más de 2 proveedores. */
/* Ordenarlo por nº de clientes o proveedores de forma descendente. */
  
SELECT PROVINCIAS.DESCRIPCION, COUNT(CLIENTES.CLIENTE) NUMERO, 'CLIENTES' TIPO
FROM CLIENTES, PROVINCIAS
WHERE CLIENTES.PROVINCIA = PROVINCIAS.PROVINCIA
GROUP BY PROVINCIAS.DESCRIPCION
HAVING COUNT(CLIENTES.CLIENTE) > 5
UNION
SELECT PROVINCIAS.DESCRIPCION, COUNT(PROVEEDORES.PROVEEDOR) NUMERO, 'PROVEEDORES'
FROM PROVEEDORES, PROVINCIAS
WHERE PROVEEDORES.PROVINCIA = PROVINCIAS.PROVINCIA
GROUP BY PROVINCIAS.DESCRIPCION
HAVING COUNT(PROVEEDORES.PROVEEDOR) > 2
ORDER BY 2 DESC
/

/* 56. Mostrar las provincias que tienen igual nº de clientes que de proveedores. */
/* (Incluir los que tienen cero clientes y cero proveedores) */
  
SELECT PROVINCIAS.PROVINCIA, PROVINCIAS.DESCRIPCION, COUNT(CLIENTES.CLIENTE) NUMERO
FROM CLIENTES, PROVINCIAS
WHERE CLIENTES.PROVINCIA(+) = PROVINCIAS.PROVINCIA
GROUP BY PROVINCIAS.PROVINCIA, PROVINCIAS.DESCRIPCION
INTERSECT
SELECT PROVINCIAS.PROVINCIA, PROVINCIAS.DESCRIPCION, COUNT(PROVEEDORES.PROVEEDOR) NUMERO
FROM PROVEEDORES, PROVINCIAS
WHERE PROVEEDORES.PROVINCIA(+) = PROVINCIAS.PROVINCIA
GROUP BY PROVINCIAS.PROVINCIA, PROVINCIAS.DESCRIPCION
/

/* 57. Sin cláusula INTERSECT. */
  
SELECT PROVINCIAS.PROVINCIA, PROVINCIAS.DESCRIPCION, COUNT(DISTINCT CLIENTES.CLIENTE) NUMERO
FROM PROVEEDORES, CLIENTES, PROVINCIAS
WHERE PROVEEDORES.PROVINCIA(+) = PROVINCIAS.PROVINCIA
AND CLIENTES.PROVINCIA, PROVINCIAS.PROVINCIA
GROUP BY PROVINCIAS.PROVINCIA, PROVINCIAS.DESCRIPCION
HAVING COUNT(DISTINCT PROVEEDORES.PROVEEDOR) = COUNT(DISTINCT CLIENTES.CLIENTE)
/

/* 58. Mostrar los clientes, con su empresa, población, provincia y forma de pago exceptuando aquellos que tengan realizada alguna compra y además la forma de pago que tienen asignada por defecto no coincida con alguna forma de pago existente entre sus albaranes. */

SELECT CLIENTES.CLIENTE, CLIENTES.EMPRESA, CLIENTES.POBLACION, CLIENTES.FORMPAGO
FROM CLIENTES
MINUS
SELECT CLIENTES.CLIENTE, CLIENTES.EMPRESA, CLIENTES.POBLACION, CLIENTES.FORMPAGO
FROM CLIENTES
WHERE NVL(FORMPAGO, 'SIN') != ANY (SELECT DISTINCT NVL(FORMPAGO, 'SIN')
FROM ALBARANES
WHERE ALBARANES.CLIENTE = CLIENTES.CLIENTE)
/

SELECT CLIENTES.CLIENTE, CLIENTES.EMPRESA, CLIENTES.POBLACION, CLIENTES.FORMPAGO
FROM CLIENTES
MINUS
SELECT CLIENTES.CLIENTE, CLIENTES.EMPRESA, CLIENTES.POBLACION, CLIENTES.FORMPAGO
FROM CLIENTES
WHERE EXISTS (SELECT *
              FROM ALBARANES
              WHERE ALBARANES.CLIENTE = CLIENTES.CLIENTE
                AND NVL(ALBARANES.FORMPAGO, 'SIN') != NVL(CLIENTES.FORMPAGO, 'SIN'))
/

/* ejemplos */
SELECT CLIENTE COD, EMPRESA, 'CLIENTE' TIPO
FROM CLIENTES
UNION
SELECT PROVEEDOR, EMPRESA, 'PROVEEDOR'
FROM PROVEEDORES
ORDER BY 3
/
